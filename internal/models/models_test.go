package models

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestWordleInfo(t *testing.T) {
	wi := NewWordleInfo(5)
	assert.Equal(t, 5, wi.WordLength)

	wi.Update([]string{"bb", "ly", "ab", "mb", "eb"})
	assert.Equal(t, 0, len(wi.FixedLetters))
	assert.Equal(t, 1, len(wi.UnfixedLetters))
	assert.Equal(t, 1, wi.UnfixedLetters["l"].Size())
	assert.True(t, wi.UnfixedLetters["l"].Contains(1))
	assert.Equal(t, 4, wi.ExcludedLetters.Size())
	assert.True(t, wi.ExcludedLetters.Contains("b"))
	assert.True(t, wi.ExcludedLetters.Contains("a"))
	assert.True(t, wi.ExcludedLetters.Contains("m"))
	assert.True(t, wi.ExcludedLetters.Contains("e"))

	wi.Update([]string{"hb", "ob", "ly", "lb", "nb"})
	assert.Equal(t, 0, len(wi.FixedLetters))
	assert.Equal(t, 1, len(wi.UnfixedLetters))
	assert.Equal(t, 2, wi.UnfixedLetters["l"].Size())
	assert.True(t, wi.UnfixedLetters["l"].Contains(1))
	assert.True(t, wi.UnfixedLetters["l"].Contains(2))
	assert.Equal(t, 7, wi.ExcludedLetters.Size())
	assert.True(t, wi.ExcludedLetters.Contains("b"))
	assert.True(t, wi.ExcludedLetters.Contains("a"))
	assert.True(t, wi.ExcludedLetters.Contains("m"))
	assert.True(t, wi.ExcludedLetters.Contains("e"))
	assert.True(t, wi.ExcludedLetters.Contains("h"))
	assert.True(t, wi.ExcludedLetters.Contains("o"))
	assert.True(t, wi.ExcludedLetters.Contains("n"))

	wi.Update([]string{"sb", "ig", "ly", "hb", "ib"})
	assert.Equal(t, 1, len(wi.FixedLetters))
	assert.Equal(t, 1, wi.FixedLetters["i"].Size())
	assert.True(t, wi.FixedLetters["i"].Contains(1))
	assert.Equal(t, 1, len(wi.UnfixedLetters))
	assert.Equal(t, 2, wi.UnfixedLetters["l"].Size())
	assert.True(t, wi.UnfixedLetters["l"].Contains(1))
	assert.True(t, wi.UnfixedLetters["l"].Contains(2))
	assert.Equal(t, 8, wi.ExcludedLetters.Size())
	assert.True(t, wi.ExcludedLetters.Contains("b"))
	assert.True(t, wi.ExcludedLetters.Contains("a"))
	assert.True(t, wi.ExcludedLetters.Contains("m"))
	assert.True(t, wi.ExcludedLetters.Contains("e"))
	assert.True(t, wi.ExcludedLetters.Contains("h"))
	assert.True(t, wi.ExcludedLetters.Contains("o"))
	assert.True(t, wi.ExcludedLetters.Contains("n"))
	assert.True(t, wi.ExcludedLetters.Contains("s"))

	wi.Update([]string{"lg", "ig", "db", "dy", "lb"})
	assert.Equal(t, 2, len(wi.FixedLetters))
	assert.Equal(t, 1, wi.FixedLetters["i"].Size())
	assert.True(t, wi.FixedLetters["i"].Contains(1))
	assert.Equal(t, 1, wi.FixedLetters["l"].Size())
	assert.True(t, wi.FixedLetters["l"].Contains(0))
	assert.Equal(t, 2, len(wi.UnfixedLetters))
	assert.Equal(t, 2, wi.UnfixedLetters["l"].Size())
	assert.True(t, wi.UnfixedLetters["l"].Contains(1))
	assert.True(t, wi.UnfixedLetters["l"].Contains(2))
	assert.Equal(t, 1, wi.UnfixedLetters["d"].Size())
	assert.True(t, wi.UnfixedLetters["d"].Contains(3))
	assert.Equal(t, 8, wi.ExcludedLetters.Size())
	assert.True(t, wi.ExcludedLetters.Contains("b"))
	assert.True(t, wi.ExcludedLetters.Contains("a"))
	assert.True(t, wi.ExcludedLetters.Contains("m"))
	assert.True(t, wi.ExcludedLetters.Contains("e"))
	assert.True(t, wi.ExcludedLetters.Contains("h"))
	assert.True(t, wi.ExcludedLetters.Contains("o"))
	assert.True(t, wi.ExcludedLetters.Contains("n"))
	assert.True(t, wi.ExcludedLetters.Contains("s"))

	wi.Update([]string{"vb", "ig", "vg", "dy", "ly"})
	assert.Equal(t, 3, len(wi.FixedLetters))
	assert.Equal(t, 1, wi.FixedLetters["i"].Size())
	assert.True(t, wi.FixedLetters["i"].Contains(1))
	assert.Equal(t, 1, wi.FixedLetters["l"].Size())
	assert.True(t, wi.FixedLetters["l"].Contains(0))
	assert.Equal(t, 1, wi.FixedLetters["v"].Size())
	assert.True(t, wi.FixedLetters["v"].Contains(2))
	assert.Equal(t, 2, len(wi.UnfixedLetters))
	assert.Equal(t, 3, wi.UnfixedLetters["l"].Size())
	assert.True(t, wi.UnfixedLetters["l"].Contains(1))
	assert.True(t, wi.UnfixedLetters["l"].Contains(2))
	assert.True(t, wi.UnfixedLetters["l"].Contains(4))
	assert.Equal(t, 1, wi.UnfixedLetters["d"].Size())
	assert.True(t, wi.UnfixedLetters["d"].Contains(3))
	assert.Equal(t, 8, wi.ExcludedLetters.Size())
	assert.True(t, wi.ExcludedLetters.Contains("b"))
	assert.True(t, wi.ExcludedLetters.Contains("a"))
	assert.True(t, wi.ExcludedLetters.Contains("m"))
	assert.True(t, wi.ExcludedLetters.Contains("e"))
	assert.True(t, wi.ExcludedLetters.Contains("h"))
	assert.True(t, wi.ExcludedLetters.Contains("o"))
	assert.True(t, wi.ExcludedLetters.Contains("n"))
	assert.True(t, wi.ExcludedLetters.Contains("s"))
}
